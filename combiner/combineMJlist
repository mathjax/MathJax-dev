#! /usr/bin/perl

#
#  Combine scripts in the MathJax project into single-file-load
#  configuration files.
#
#  Usage:  ./combineMJlist proj-dir lis-file [out-dir]
#
#    proj-dir is the base directory of the MathJax project
#    lis-file is the name of the .lis file that contains information about
#      how to create this combined config file
#    out-dir is optional, and gives the directory to which to write the
#      final output file.  It defaults to the 'config' directory inside
#      the MathJax project.

use Cwd;
use FindBin;

$DIR = $FindBin::Bin;
$MJX = $ARGV[0];

my $name = $ARGV[1];
my $listfile = $name;
$name =~ s!.*/!!;
die "Usage: ./combineMJlist proj-dir lis-file [out-dir]\n" unless $name =~ m/\S/;

die "Project directory must contain a config directory\n" unless -d "$MJX/config";

my $outdir = $MJX;
my $outfile = "config/$name";
$outfile =~ s/\.[^.]*/.js/;

# If the user supplied an output directory, then use that, and strip off
# the 'config/' prefix from $outfile
if ($ARGV[2]) {
    $outdir = $ARGV[2];
    $outfile =~ s/^config\///;
}

my $template = "$DIR/template.js";


$load_complete_path = "[MathJax]/$outfile";


open(my $LIST_FILE, "<", $listfile) or die "Can't open $listfile for reading";
@files = ();
while ($file = <$LIST_FILE>) {
    chomp($file);
    if ($file =~ s/^LOAD-COMPLETE-PATH:\s*//) {
        $load_complete_path = $file;
    }
    elsif ($file =~ m/\S/) {
        push (@files,$file);
    }
    else {
        @config = <$LIST_FILE>;
        chomp(@config);
        last;
    }
}

$MMLorHTML = 0;
@list = ();

foreach $file (@files) {
  $MMLorHTML = 1 if $file =~ m!/MMLorHTML.js!;
  push(@list,"[MathJax]/$file");
}
$files = '  "'.join("\",\n  \"",@list).'"';
$MMLorHTML = ("","\nMathJax.Hub.Config({delayJaxRegistration: true});\n")[$MMLorHTML];

open(CONFIG,"<","$template") || die "Can't open $template: $!\n";
@lines = <CONFIG>;
close(CONFIG);
$config = join("",@lines);

$config =~ s!%%% NAME %%%!/MathJax/$outfile!;
$config =~ s!%%% FILES %%%!$files!;
$config =~ s!%%% MMLorHTML %%%!$MMLorHTML!;

print "Creating $outfile\n";
open(CONFIG,">","$outdir/$outfile") || die "Can't write $outdir/$outfile: $!\n";
print CONFIG $config;

if (scalar(@config)) {
  print CONFIG "MathJax.Hub.Config({\n  ";
  print CONFIG join("\n  ",@config);
  print CONFIG "\n});\n\n";
}

foreach $file (@files) {
  print "  $file\n";
  open(JS,"<","$MJX/$file") || warn "Can't read $MJX/$file: $!\n";
  @lines = <JS>;
  close(JS);
  $lines = join("",@lines);
  $lines =~ s!/.*?\*/\n\n!!s;
  print CONFIG $lines;
}

print CONFIG "MathJax.Ajax.loadComplete(\"$load_complete_path\");\n";

close(CONFIG);

1;
